Grammar:

Rule 0     S' -> program
Rule 1     program -> sects
Rule 2     sects -> sect sects
Rule 3     sects -> sect
Rule 4     sect -> tSect
Rule 5     sect -> dSect
Rule 6     dSect -> DATA filetag declarations
Rule 7     tSect -> TEXT filetag instrs
Rule 8     filetag -> LINE_MARKER
Rule 9     label -> LABEL COLON
Rule 10    instrs -> label instr filetag instrs
Rule 11    instrs -> label instr filetag
Rule 12    instrs -> instr filetag
Rule 13    instrs -> instr filetag instrs
Rule 14    instr -> breakpoint
Rule 15    instr -> nop
Rule 16    instr -> label
Rule 17    instr -> move
Rule 18    instr -> iType
Rule 19    instr -> jType
Rule 20    instr -> syscall
Rule 21    instr -> rType
Rule 22    instr -> branch
Rule 23    iType -> LOADS_R REG LABEL
Rule 24    iType -> PS_LOADS_A REG LABEL
Rule 25    iType -> PS_LOADS_I REG CHAR
Rule 26    iType -> PS_LOADS_I REG NUMBER
Rule 27    iType -> PS_I_TYPE REG REG CHAR
Rule 28    iType -> PS_I_TYPE REG REG NUMBER
Rule 29    iType -> MOVE_COND_F F_REG F_REG NUMBER
Rule 30    iType -> MOVE_COND_F F_REG F_REG
Rule 31    iType -> MOVE_BTWN_F REG F_REG
Rule 32    iType -> CONVERT_F F_REG F_REG
Rule 33    iType -> COMPARE_F NUMBER COMMA F_REG F_REG
Rule 34    iType -> COMPARE_F NUMBER F_REG F_REG
Rule 35    iType -> COMPARE_F F_REG F_REG
Rule 36    iType -> LOADS_F F_REG LPAREN REG RPAREN
Rule 37    iType -> LOADS_F F_REG NUMBER LPAREN REG RPAREN
Rule 38    iType -> MOVE_COND REG REG NUMBER
Rule 39    iType -> MOVE_COND REG REG
Rule 40    iType -> LOADS_R REG LPAREN REG RPAREN
Rule 41    iType -> LOADS_R REG NUMBER LPAREN REG RPAREN
Rule 42    iType -> LOADS_I REG CHAR
Rule 43    iType -> LOADS_I REG NUMBER
Rule 44    iType -> I_TYPE REG REG CHAR
Rule 45    iType -> I_TYPE REG REG NUMBER
Rule 46    rType -> PS_R_TYPE2 REG REG
Rule 47    rType -> PS_R_TYPE3 REG REG REG
Rule 48    rType -> MOVE_F F_REG F_REG REG
Rule 49    rType -> R_TYPE2_F F_REG F_REG
Rule 50    rType -> R_TYPE2 REG REG
Rule 51    rType -> R_TYPE3_F F_REG F_REG F_REG
Rule 52    rType -> R_TYPE3 REG REG REG
Rule 53    jType -> J_TYPE_R REG
Rule 54    jType -> J_TYPE LABEL
Rule 55    move -> MOVE REG
Rule 56    branch -> PS_ZERO_BRANCH REG LABEL
Rule 57    branch -> PS_BRANCH REG REG LABEL
Rule 58    branch -> BRANCH_F NUMBER COMMA LABEL
Rule 59    branch -> BRANCH_F NUMBER LABEL
Rule 60    branch -> BRANCH_F LABEL
Rule 61    branch -> ZERO_BRANCH REG LABEL
Rule 62    branch -> BRANCH REG REG LABEL
Rule 63    syscall -> SYSCALL
Rule 64    nop -> NOP
Rule 65    breakpoint -> BREAK NUMBER
Rule 66    breakpoint -> BREAK
Rule 67    declarations -> declaration filetag
Rule 68    declarations -> declaration filetag declarations
Rule 69    declaration -> ALIGN NUMBER
Rule 70    declaration -> EQV
Rule 71    declaration -> DOUBLE floats
Rule 72    declaration -> FLOAT floats
Rule 73    declaration -> HALF nums
Rule 74    declaration -> SPACE nums
Rule 75    declaration -> ASCII STRING
Rule 76    declaration -> BYTE chars
Rule 77    declaration -> WORD nums
Rule 78    declaration -> ASCIIZ STRING
Rule 79    declaration -> label DOUBLE floats
Rule 80    declaration -> label FLOAT floats
Rule 81    declaration -> label HALF nums
Rule 82    declaration -> label SPACE nums
Rule 83    declaration -> label ASCII STRING
Rule 84    declaration -> label BYTE chars
Rule 85    declaration -> label WORD nums
Rule 86    declaration -> label ASCIIZ STRING
Rule 87    nums -> NUMBER nums
Rule 88    nums -> NUMBER COMMA nums
Rule 89    nums -> NUMBER
Rule 90    floats -> FLOAT_LITERAL floats
Rule 91    floats -> FLOAT_LITERAL COMMA floats
Rule 92    floats -> FLOAT_LITERAL
Rule 93    chars -> NUMBER chars
Rule 94    chars -> NUMBER COMMA chars
Rule 95    chars -> NUMBER
Rule 96    chars -> CHAR chars
Rule 97    chars -> CHAR COMMA chars
Rule 98    chars -> CHAR

Terminals, with rules where they appear:

ALIGN                : 69
ASCII                : 75 83
ASCIIZ               : 78 86
BRANCH               : 62
BRANCH_F             : 58 59 60
BREAK                : 65 66
BYTE                 : 76 84
CHAR                 : 25 27 42 44 96 97 98
COLON                : 9
COMMA                : 33 58 88 91 94 97
COMPARE_F            : 33 34 35
CONVERT_F            : 32
DATA                 : 6
DOUBLE               : 71 79
EQV                  : 70
FLOAT                : 72 80
FLOAT_LITERAL        : 90 91 92
F_REG                : 29 29 30 30 31 32 32 33 33 34 34 35 35 36 37 48 48 49 49 51 51 51
HALF                 : 73 81
I_TYPE               : 44 45
J_TYPE               : 54
J_TYPE_R             : 53
LABEL                : 9 23 24 54 56 57 58 59 60 61 62
LINE_MARKER          : 8
LOADS_F              : 36 37
LOADS_I              : 42 43
LOADS_R              : 23 40 41
LPAREN               : 36 37 40 41
MOVE                 : 55
MOVE_BTWN_F          : 31
MOVE_COND            : 38 39
MOVE_COND_F          : 29 30
MOVE_F               : 48
NOP                  : 64
NUMBER               : 26 28 29 33 34 37 38 41 43 45 58 59 65 69 87 88 89 93 94 95
PS_BRANCH            : 57
PS_I_TYPE            : 27 28
PS_LOADS_A           : 24
PS_LOADS_I           : 25 26
PS_R_TYPE2           : 46
PS_R_TYPE3           : 47
PS_ZERO_BRANCH       : 56
REG                  : 23 24 25 26 27 27 28 28 31 36 37 38 38 39 39 40 40 41 41 42 43 44 44 45 45 46 46 47 47 47 48 50 50 52 52 52 53 55 56 57 57 61 62 62
RPAREN               : 36 37 40 41
R_TYPE2              : 50
R_TYPE2_F            : 49
R_TYPE3              : 52
R_TYPE3_F            : 51
SPACE                : 74 82
STRING               : 75 78 83 86
SYSCALL              : 63
TEXT                 : 7
WORD                 : 77 85
ZERO_BRANCH          : 61
error                : 

Nonterminals, with rules where they appear:

branch               : 22
breakpoint           : 14
chars                : 76 84 93 94 96 97
dSect                : 5
declaration          : 67 68
declarations         : 6 68
filetag              : 6 7 10 11 12 13 67 68
floats               : 71 72 79 80 90 91
iType                : 18
instr                : 10 11 12 13
instrs               : 7 10 13
jType                : 19
label                : 10 11 16 79 80 81 82 83 84 85 86
move                 : 17
nop                  : 15
nums                 : 73 74 77 81 82 85 87 88
program              : 0
rType                : 21
sect                 : 2 3
sects                : 1 2
syscall              : 20
tSect                : 4


state 0

    (0) S' -> . program
    (1) program -> . sects
    (2) sects -> . sect sects
    (3) sects -> . sect
    (4) sect -> . tSect
    (5) sect -> . dSect
    (7) tSect -> . TEXT filetag instrs
    (6) dSect -> . DATA filetag declarations
    TEXT            shift and go to state 6
    DATA            shift and go to state 7

    program                        shift and go to state 1
    sects                          shift and go to state 2
    sect                           shift and go to state 3
    tSect                          shift and go to state 4
    dSect                          shift and go to state 5

state 1

    (0) S' -> program .


state 2

    (1) program -> sects .
    $end            reduce using rule 1 (program -> sects .)


state 3

    (2) sects -> sect . sects
    (3) sects -> sect .
    (2) sects -> . sect sects
    (3) sects -> . sect
    (4) sect -> . tSect
    (5) sect -> . dSect
    (7) tSect -> . TEXT filetag instrs
    (6) dSect -> . DATA filetag declarations
    $end            reduce using rule 3 (sects -> sect .)
    TEXT            shift and go to state 6
    DATA            shift and go to state 7

    sect                           shift and go to state 3
    sects                          shift and go to state 8
    tSect                          shift and go to state 4
    dSect                          shift and go to state 5

state 4

    (4) sect -> tSect .
    TEXT            reduce using rule 4 (sect -> tSect .)
    DATA            reduce using rule 4 (sect -> tSect .)
    $end            reduce using rule 4 (sect -> tSect .)


state 5

    (5) sect -> dSect .
    TEXT            reduce using rule 5 (sect -> dSect .)
    DATA            reduce using rule 5 (sect -> dSect .)
    $end            reduce using rule 5 (sect -> dSect .)


state 6

    (7) tSect -> TEXT . filetag instrs
    (8) filetag -> . LINE_MARKER
    LINE_MARKER     shift and go to state 10

    filetag                        shift and go to state 9

state 7

    (6) dSect -> DATA . filetag declarations
    (8) filetag -> . LINE_MARKER
    LINE_MARKER     shift and go to state 10

    filetag                        shift and go to state 11

state 8

    (2) sects -> sect sects .
    $end            reduce using rule 2 (sects -> sect sects .)


state 9

    (7) tSect -> TEXT filetag . instrs
    (10) instrs -> . label instr filetag instrs
    (11) instrs -> . label instr filetag
    (12) instrs -> . instr filetag
    (13) instrs -> . instr filetag instrs
    (9) label -> . LABEL COLON
    (14) instr -> . breakpoint
    (15) instr -> . nop
    (16) instr -> . label
    (17) instr -> . move
    (18) instr -> . iType
    (19) instr -> . jType
    (20) instr -> . syscall
    (21) instr -> . rType
    (22) instr -> . branch
    (65) breakpoint -> . BREAK NUMBER
    (66) breakpoint -> . BREAK
    (64) nop -> . NOP
    (55) move -> . MOVE REG
    (23) iType -> . LOADS_R REG LABEL
    (24) iType -> . PS_LOADS_A REG LABEL
    (25) iType -> . PS_LOADS_I REG CHAR
    (26) iType -> . PS_LOADS_I REG NUMBER
    (27) iType -> . PS_I_TYPE REG REG CHAR
    (28) iType -> . PS_I_TYPE REG REG NUMBER
    (29) iType -> . MOVE_COND_F F_REG F_REG NUMBER
    (30) iType -> . MOVE_COND_F F_REG F_REG
    (31) iType -> . MOVE_BTWN_F REG F_REG
    (32) iType -> . CONVERT_F F_REG F_REG
    (33) iType -> . COMPARE_F NUMBER COMMA F_REG F_REG
    (34) iType -> . COMPARE_F NUMBER F_REG F_REG
    (35) iType -> . COMPARE_F F_REG F_REG
    (36) iType -> . LOADS_F F_REG LPAREN REG RPAREN
    (37) iType -> . LOADS_F F_REG NUMBER LPAREN REG RPAREN
    (38) iType -> . MOVE_COND REG REG NUMBER
    (39) iType -> . MOVE_COND REG REG
    (40) iType -> . LOADS_R REG LPAREN REG RPAREN
    (41) iType -> . LOADS_R REG NUMBER LPAREN REG RPAREN
    (42) iType -> . LOADS_I REG CHAR
    (43) iType -> . LOADS_I REG NUMBER
    (44) iType -> . I_TYPE REG REG CHAR
    (45) iType -> . I_TYPE REG REG NUMBER
    (53) jType -> . J_TYPE_R REG
    (54) jType -> . J_TYPE LABEL
    (63) syscall -> . SYSCALL
    (46) rType -> . PS_R_TYPE2 REG REG
    (47) rType -> . PS_R_TYPE3 REG REG REG
    (48) rType -> . MOVE_F F_REG F_REG REG
    (49) rType -> . R_TYPE2_F F_REG F_REG
    (50) rType -> . R_TYPE2 REG REG
    (51) rType -> . R_TYPE3_F F_REG F_REG F_REG
    (52) rType -> . R_TYPE3 REG REG REG
    (56) branch -> . PS_ZERO_BRANCH REG LABEL
    (57) branch -> . PS_BRANCH REG REG LABEL
    (58) branch -> . BRANCH_F NUMBER COMMA LABEL
    (59) branch -> . BRANCH_F NUMBER LABEL
    (60) branch -> . BRANCH_F LABEL
    (61) branch -> . ZERO_BRANCH REG LABEL
    (62) branch -> . BRANCH REG REG LABEL
    LABEL           shift and go to state 15
    BREAK           shift and go to state 24
    NOP             shift and go to state 25
    MOVE            shift and go to state 26
    LOADS_R         shift and go to state 27
    PS_LOADS_A      shift and go to state 28
    PS_LOADS_I      shift and go to state 29
    PS_I_TYPE       shift and go to state 30
    MOVE_COND_F     shift and go to state 31
    MOVE_BTWN_F     shift and go to state 32
    CONVERT_F       shift and go to state 33
    COMPARE_F       shift and go to state 34
    LOADS_F         shift and go to state 35
    MOVE_COND       shift and go to state 36
    LOADS_I         shift and go to state 37
    I_TYPE          shift and go to state 38
    J_TYPE_R        shift and go to state 39
    J_TYPE          shift and go to state 40
    SYSCALL         shift and go to state 41
    PS_R_TYPE2      shift and go to state 42
    PS_R_TYPE3      shift and go to state 43
    MOVE_F          shift and go to state 44
    R_TYPE2_F       shift and go to state 45
    R_TYPE2         shift and go to state 46
    R_TYPE3_F       shift and go to state 47
    R_TYPE3         shift and go to state 48
    PS_ZERO_BRANCH  shift and go to state 49
    PS_BRANCH       shift and go to state 50
    BRANCH_F        shift and go to state 51
    ZERO_BRANCH     shift and go to state 52
    BRANCH          shift and go to state 53

    instrs                         shift and go to state 12
    label                          shift and go to state 13
    instr                          shift and go to state 14
    breakpoint                     shift and go to state 16
    nop                            shift and go to state 17
    move                           shift and go to state 18
    iType                          shift and go to state 19
    jType                          shift and go to state 20
    syscall                        shift and go to state 21
    rType                          shift and go to state 22
    branch                         shift and go to state 23

state 10

    (8) filetag -> LINE_MARKER .
    LABEL           reduce using rule 8 (filetag -> LINE_MARKER .)
    BREAK           reduce using rule 8 (filetag -> LINE_MARKER .)
    NOP             reduce using rule 8 (filetag -> LINE_MARKER .)
    MOVE            reduce using rule 8 (filetag -> LINE_MARKER .)
    LOADS_R         reduce using rule 8 (filetag -> LINE_MARKER .)
    PS_LOADS_A      reduce using rule 8 (filetag -> LINE_MARKER .)
    PS_LOADS_I      reduce using rule 8 (filetag -> LINE_MARKER .)
    PS_I_TYPE       reduce using rule 8 (filetag -> LINE_MARKER .)
    MOVE_COND_F     reduce using rule 8 (filetag -> LINE_MARKER .)
    MOVE_BTWN_F     reduce using rule 8 (filetag -> LINE_MARKER .)
    CONVERT_F       reduce using rule 8 (filetag -> LINE_MARKER .)
    COMPARE_F       reduce using rule 8 (filetag -> LINE_MARKER .)
    LOADS_F         reduce using rule 8 (filetag -> LINE_MARKER .)
    MOVE_COND       reduce using rule 8 (filetag -> LINE_MARKER .)
    LOADS_I         reduce using rule 8 (filetag -> LINE_MARKER .)
    I_TYPE          reduce using rule 8 (filetag -> LINE_MARKER .)
    J_TYPE_R        reduce using rule 8 (filetag -> LINE_MARKER .)
    J_TYPE          reduce using rule 8 (filetag -> LINE_MARKER .)
    SYSCALL         reduce using rule 8 (filetag -> LINE_MARKER .)
    PS_R_TYPE2      reduce using rule 8 (filetag -> LINE_MARKER .)
    PS_R_TYPE3      reduce using rule 8 (filetag -> LINE_MARKER .)
    MOVE_F          reduce using rule 8 (filetag -> LINE_MARKER .)
    R_TYPE2_F       reduce using rule 8 (filetag -> LINE_MARKER .)
    R_TYPE2         reduce using rule 8 (filetag -> LINE_MARKER .)
    R_TYPE3_F       reduce using rule 8 (filetag -> LINE_MARKER .)
    R_TYPE3         reduce using rule 8 (filetag -> LINE_MARKER .)
    PS_ZERO_BRANCH  reduce using rule 8 (filetag -> LINE_MARKER .)
    PS_BRANCH       reduce using rule 8 (filetag -> LINE_MARKER .)
    BRANCH_F        reduce using rule 8 (filetag -> LINE_MARKER .)
    ZERO_BRANCH     reduce using rule 8 (filetag -> LINE_MARKER .)
    BRANCH          reduce using rule 8 (filetag -> LINE_MARKER .)
    ALIGN           reduce using rule 8 (filetag -> LINE_MARKER .)
    EQV             reduce using rule 8 (filetag -> LINE_MARKER .)
    DOUBLE          reduce using rule 8 (filetag -> LINE_MARKER .)
    FLOAT           reduce using rule 8 (filetag -> LINE_MARKER .)
    HALF            reduce using rule 8 (filetag -> LINE_MARKER .)
    SPACE           reduce using rule 8 (filetag -> LINE_MARKER .)
    ASCII           reduce using rule 8 (filetag -> LINE_MARKER .)
    BYTE            reduce using rule 8 (filetag -> LINE_MARKER .)
    WORD            reduce using rule 8 (filetag -> LINE_MARKER .)
    ASCIIZ          reduce using rule 8 (filetag -> LINE_MARKER .)
    TEXT            reduce using rule 8 (filetag -> LINE_MARKER .)
    DATA            reduce using rule 8 (filetag -> LINE_MARKER .)
    $end            reduce using rule 8 (filetag -> LINE_MARKER .)


state 11

    (6) dSect -> DATA filetag . declarations
    (67) declarations -> . declaration filetag
    (68) declarations -> . declaration filetag declarations
    (69) declaration -> . ALIGN NUMBER
    (70) declaration -> . EQV
    (71) declaration -> . DOUBLE floats
    (72) declaration -> . FLOAT floats
    (73) declaration -> . HALF nums
    (74) declaration -> . SPACE nums
    (75) declaration -> . ASCII STRING
    (76) declaration -> . BYTE chars
    (77) declaration -> . WORD nums
    (78) declaration -> . ASCIIZ STRING
    (79) declaration -> . label DOUBLE floats
    (80) declaration -> . label FLOAT floats
    (81) declaration -> . label HALF nums
    (82) declaration -> . label SPACE nums
    (83) declaration -> . label ASCII STRING
    (84) declaration -> . label BYTE chars
    (85) declaration -> . label WORD nums
    (86) declaration -> . label ASCIIZ STRING
    (9) label -> . LABEL COLON
    ALIGN           shift and go to state 56
    EQV             shift and go to state 57
    DOUBLE          shift and go to state 58
    FLOAT           shift and go to state 59
    HALF            shift and go to state 60
    SPACE           shift and go to state 61
    ASCII           shift and go to state 62
    BYTE            shift and go to state 63
    WORD            shift and go to state 64
    ASCIIZ          shift and go to state 65
    LABEL           shift and go to state 15

    declarations                   shift and go to state 54
    declaration                    shift and go to state 55
    label                          shift and go to state 66

state 12

    (7) tSect -> TEXT filetag instrs .
    TEXT            reduce using rule 7 (tSect -> TEXT filetag instrs .)
    DATA            reduce using rule 7 (tSect -> TEXT filetag instrs .)
    $end            reduce using rule 7 (tSect -> TEXT filetag instrs .)


state 13

    (10) instrs -> label . instr filetag instrs
    (11) instrs -> label . instr filetag
    (16) instr -> label .
    (14) instr -> . breakpoint
    (15) instr -> . nop
    (16) instr -> . label
    (17) instr -> . move
    (18) instr -> . iType
    (19) instr -> . jType
    (20) instr -> . syscall
    (21) instr -> . rType
    (22) instr -> . branch
    (65) breakpoint -> . BREAK NUMBER
    (66) breakpoint -> . BREAK
    (64) nop -> . NOP
    (9) label -> . LABEL COLON
    (55) move -> . MOVE REG
    (23) iType -> . LOADS_R REG LABEL
    (24) iType -> . PS_LOADS_A REG LABEL
    (25) iType -> . PS_LOADS_I REG CHAR
    (26) iType -> . PS_LOADS_I REG NUMBER
    (27) iType -> . PS_I_TYPE REG REG CHAR
    (28) iType -> . PS_I_TYPE REG REG NUMBER
    (29) iType -> . MOVE_COND_F F_REG F_REG NUMBER
    (30) iType -> . MOVE_COND_F F_REG F_REG
    (31) iType -> . MOVE_BTWN_F REG F_REG
    (32) iType -> . CONVERT_F F_REG F_REG
    (33) iType -> . COMPARE_F NUMBER COMMA F_REG F_REG
    (34) iType -> . COMPARE_F NUMBER F_REG F_REG
    (35) iType -> . COMPARE_F F_REG F_REG
    (36) iType -> . LOADS_F F_REG LPAREN REG RPAREN
    (37) iType -> . LOADS_F F_REG NUMBER LPAREN REG RPAREN
    (38) iType -> . MOVE_COND REG REG NUMBER
    (39) iType -> . MOVE_COND REG REG
    (40) iType -> . LOADS_R REG LPAREN REG RPAREN
    (41) iType -> . LOADS_R REG NUMBER LPAREN REG RPAREN
    (42) iType -> . LOADS_I REG CHAR
    (43) iType -> . LOADS_I REG NUMBER
    (44) iType -> . I_TYPE REG REG CHAR
    (45) iType -> . I_TYPE REG REG NUMBER
    (53) jType -> . J_TYPE_R REG
    (54) jType -> . J_TYPE LABEL
    (63) syscall -> . SYSCALL
    (46) rType -> . PS_R_TYPE2 REG REG
    (47) rType -> . PS_R_TYPE3 REG REG REG
    (48) rType -> . MOVE_F F_REG F_REG REG
    (49) rType -> . R_TYPE2_F F_REG F_REG
    (50) rType -> . R_TYPE2 REG REG
    (51) rType -> . R_TYPE3_F F_REG F_REG F_REG
    (52) rType -> . R_TYPE3 REG REG REG
    (56) branch -> . PS_ZERO_BRANCH REG LABEL
    (57) branch -> . PS_BRANCH REG REG LABEL
    (58) branch -> . BRANCH_F NUMBER COMMA LABEL
    (59) branch -> . BRANCH_F NUMBER LABEL
    (60) branch -> . BRANCH_F LABEL
    (61) branch -> . ZERO_BRANCH REG LABEL
    (62) branch -> . BRANCH REG REG LABEL
    LINE_MARKER     reduce using rule 16 (instr -> label .)
    BREAK           shift and go to state 24
    NOP             shift and go to state 25
    LABEL           shift and go to state 15
    MOVE            shift and go to state 26
    LOADS_R         shift and go to state 27
    PS_LOADS_A      shift and go to state 28
    PS_LOADS_I      shift and go to state 29
    PS_I_TYPE       shift and go to state 30
    MOVE_COND_F     shift and go to state 31
    MOVE_BTWN_F     shift and go to state 32
    CONVERT_F       shift and go to state 33
    COMPARE_F       shift and go to state 34
    LOADS_F         shift and go to state 35
    MOVE_COND       shift and go to state 36
    LOADS_I         shift and go to state 37
    I_TYPE          shift and go to state 38
    J_TYPE_R        shift and go to state 39
    J_TYPE          shift and go to state 40
    SYSCALL         shift and go to state 41
    PS_R_TYPE2      shift and go to state 42
    PS_R_TYPE3      shift and go to state 43
    MOVE_F          shift and go to state 44
    R_TYPE2_F       shift and go to state 45
    R_TYPE2         shift and go to state 46
    R_TYPE3_F       shift and go to state 47
    R_TYPE3         shift and go to state 48
    PS_ZERO_BRANCH  shift and go to state 49
    PS_BRANCH       shift and go to state 50
    BRANCH_F        shift and go to state 51
    ZERO_BRANCH     shift and go to state 52
    BRANCH          shift and go to state 53

    label                          shift and go to state 67
    instr                          shift and go to state 68
    breakpoint                     shift and go to state 16
    nop                            shift and go to state 17
    move                           shift and go to state 18
    iType                          shift and go to state 19
    jType                          shift and go to state 20
    syscall                        shift and go to state 21
    rType                          shift and go to state 22
    branch                         shift and go to state 23

state 14

    (12) instrs -> instr . filetag
    (13) instrs -> instr . filetag instrs
    (8) filetag -> . LINE_MARKER
    LINE_MARKER     shift and go to state 10

    filetag                        shift and go to state 69

state 15

    (9) label -> LABEL . COLON
    COLON           shift and go to state 70


state 16

    (14) instr -> breakpoint .
    LINE_MARKER     reduce using rule 14 (instr -> breakpoint .)


state 17

    (15) instr -> nop .
    LINE_MARKER     reduce using rule 15 (instr -> nop .)


state 18

    (17) instr -> move .
    LINE_MARKER     reduce using rule 17 (instr -> move .)


state 19

    (18) instr -> iType .
    LINE_MARKER     reduce using rule 18 (instr -> iType .)


state 20

    (19) instr -> jType .
    LINE_MARKER     reduce using rule 19 (instr -> jType .)


state 21

    (20) instr -> syscall .
    LINE_MARKER     reduce using rule 20 (instr -> syscall .)


state 22

    (21) instr -> rType .
    LINE_MARKER     reduce using rule 21 (instr -> rType .)


state 23

    (22) instr -> branch .
    LINE_MARKER     reduce using rule 22 (instr -> branch .)


state 24

    (65) breakpoint -> BREAK . NUMBER
    (66) breakpoint -> BREAK .
    NUMBER          shift and go to state 71
    LINE_MARKER     reduce using rule 66 (breakpoint -> BREAK .)


state 25

    (64) nop -> NOP .
    LINE_MARKER     reduce using rule 64 (nop -> NOP .)


state 26

    (55) move -> MOVE . REG
    REG             shift and go to state 72


state 27

    (23) iType -> LOADS_R . REG LABEL
    (40) iType -> LOADS_R . REG LPAREN REG RPAREN
    (41) iType -> LOADS_R . REG NUMBER LPAREN REG RPAREN
    REG             shift and go to state 73


state 28

    (24) iType -> PS_LOADS_A . REG LABEL
    REG             shift and go to state 74


state 29

    (25) iType -> PS_LOADS_I . REG CHAR
    (26) iType -> PS_LOADS_I . REG NUMBER
    REG             shift and go to state 75


state 30

    (27) iType -> PS_I_TYPE . REG REG CHAR
    (28) iType -> PS_I_TYPE . REG REG NUMBER
    REG             shift and go to state 76


state 31

    (29) iType -> MOVE_COND_F . F_REG F_REG NUMBER
    (30) iType -> MOVE_COND_F . F_REG F_REG
    F_REG           shift and go to state 77


state 32

    (31) iType -> MOVE_BTWN_F . REG F_REG
    REG             shift and go to state 78


state 33

    (32) iType -> CONVERT_F . F_REG F_REG
    F_REG           shift and go to state 79


state 34

    (33) iType -> COMPARE_F . NUMBER COMMA F_REG F_REG
    (34) iType -> COMPARE_F . NUMBER F_REG F_REG
    (35) iType -> COMPARE_F . F_REG F_REG
    NUMBER          shift and go to state 80
    F_REG           shift and go to state 81


state 35

    (36) iType -> LOADS_F . F_REG LPAREN REG RPAREN
    (37) iType -> LOADS_F . F_REG NUMBER LPAREN REG RPAREN
    F_REG           shift and go to state 82


state 36

    (38) iType -> MOVE_COND . REG REG NUMBER
    (39) iType -> MOVE_COND . REG REG
    REG             shift and go to state 83


state 37

    (42) iType -> LOADS_I . REG CHAR
    (43) iType -> LOADS_I . REG NUMBER
    REG             shift and go to state 84


state 38

    (44) iType -> I_TYPE . REG REG CHAR
    (45) iType -> I_TYPE . REG REG NUMBER
    REG             shift and go to state 85


state 39

    (53) jType -> J_TYPE_R . REG
    REG             shift and go to state 86


state 40

    (54) jType -> J_TYPE . LABEL
    LABEL           shift and go to state 87


state 41

    (63) syscall -> SYSCALL .
    LINE_MARKER     reduce using rule 63 (syscall -> SYSCALL .)


state 42

    (46) rType -> PS_R_TYPE2 . REG REG
    REG             shift and go to state 88


state 43

    (47) rType -> PS_R_TYPE3 . REG REG REG
    REG             shift and go to state 89


state 44

    (48) rType -> MOVE_F . F_REG F_REG REG
    F_REG           shift and go to state 90


state 45

    (49) rType -> R_TYPE2_F . F_REG F_REG
    F_REG           shift and go to state 91


state 46

    (50) rType -> R_TYPE2 . REG REG
    REG             shift and go to state 92


state 47

    (51) rType -> R_TYPE3_F . F_REG F_REG F_REG
    F_REG           shift and go to state 93


state 48

    (52) rType -> R_TYPE3 . REG REG REG
    REG             shift and go to state 94


state 49

    (56) branch -> PS_ZERO_BRANCH . REG LABEL
    REG             shift and go to state 95


state 50

    (57) branch -> PS_BRANCH . REG REG LABEL
    REG             shift and go to state 96


state 51

    (58) branch -> BRANCH_F . NUMBER COMMA LABEL
    (59) branch -> BRANCH_F . NUMBER LABEL
    (60) branch -> BRANCH_F . LABEL
    NUMBER          shift and go to state 97
    LABEL           shift and go to state 98


state 52

    (61) branch -> ZERO_BRANCH . REG LABEL
    REG             shift and go to state 99


state 53

    (62) branch -> BRANCH . REG REG LABEL
    REG             shift and go to state 100


state 54

    (6) dSect -> DATA filetag declarations .
    TEXT            reduce using rule 6 (dSect -> DATA filetag declarations .)
    DATA            reduce using rule 6 (dSect -> DATA filetag declarations .)
    $end            reduce using rule 6 (dSect -> DATA filetag declarations .)


state 55

    (67) declarations -> declaration . filetag
    (68) declarations -> declaration . filetag declarations
    (8) filetag -> . LINE_MARKER
    LINE_MARKER     shift and go to state 10

    filetag                        shift and go to state 101

state 56

    (69) declaration -> ALIGN . NUMBER
    NUMBER          shift and go to state 102


state 57

    (70) declaration -> EQV .
    LINE_MARKER     reduce using rule 70 (declaration -> EQV .)


state 58

    (71) declaration -> DOUBLE . floats
    (90) floats -> . FLOAT_LITERAL floats
    (91) floats -> . FLOAT_LITERAL COMMA floats
    (92) floats -> . FLOAT_LITERAL
    FLOAT_LITERAL   shift and go to state 104

    floats                         shift and go to state 103

state 59

    (72) declaration -> FLOAT . floats
    (90) floats -> . FLOAT_LITERAL floats
    (91) floats -> . FLOAT_LITERAL COMMA floats
    (92) floats -> . FLOAT_LITERAL
    FLOAT_LITERAL   shift and go to state 104

    floats                         shift and go to state 105

state 60

    (73) declaration -> HALF . nums
    (87) nums -> . NUMBER nums
    (88) nums -> . NUMBER COMMA nums
    (89) nums -> . NUMBER
    NUMBER          shift and go to state 107

    nums                           shift and go to state 106

state 61

    (74) declaration -> SPACE . nums
    (87) nums -> . NUMBER nums
    (88) nums -> . NUMBER COMMA nums
    (89) nums -> . NUMBER
    NUMBER          shift and go to state 107

    nums                           shift and go to state 108

state 62

    (75) declaration -> ASCII . STRING
    STRING          shift and go to state 109


state 63

    (76) declaration -> BYTE . chars
    (93) chars -> . NUMBER chars
    (94) chars -> . NUMBER COMMA chars
    (95) chars -> . NUMBER
    (96) chars -> . CHAR chars
    (97) chars -> . CHAR COMMA chars
    (98) chars -> . CHAR
    NUMBER          shift and go to state 111
    CHAR            shift and go to state 112

    chars                          shift and go to state 110

state 64

    (77) declaration -> WORD . nums
    (87) nums -> . NUMBER nums
    (88) nums -> . NUMBER COMMA nums
    (89) nums -> . NUMBER
    NUMBER          shift and go to state 107

    nums                           shift and go to state 113

state 65

    (78) declaration -> ASCIIZ . STRING
    STRING          shift and go to state 114


state 66

    (79) declaration -> label . DOUBLE floats
    (80) declaration -> label . FLOAT floats
    (81) declaration -> label . HALF nums
    (82) declaration -> label . SPACE nums
    (83) declaration -> label . ASCII STRING
    (84) declaration -> label . BYTE chars
    (85) declaration -> label . WORD nums
    (86) declaration -> label . ASCIIZ STRING
    DOUBLE          shift and go to state 115
    FLOAT           shift and go to state 116
    HALF            shift and go to state 117
    SPACE           shift and go to state 118
    ASCII           shift and go to state 119
    BYTE            shift and go to state 120
    WORD            shift and go to state 121
    ASCIIZ          shift and go to state 122


state 67

    (16) instr -> label .
    LINE_MARKER     reduce using rule 16 (instr -> label .)


state 68

    (10) instrs -> label instr . filetag instrs
    (11) instrs -> label instr . filetag
    (8) filetag -> . LINE_MARKER
    LINE_MARKER     shift and go to state 10

    filetag                        shift and go to state 123

state 69

    (12) instrs -> instr filetag .
    (13) instrs -> instr filetag . instrs
    (10) instrs -> . label instr filetag instrs
    (11) instrs -> . label instr filetag
    (12) instrs -> . instr filetag
    (13) instrs -> . instr filetag instrs
    (9) label -> . LABEL COLON
    (14) instr -> . breakpoint
    (15) instr -> . nop
    (16) instr -> . label
    (17) instr -> . move
    (18) instr -> . iType
    (19) instr -> . jType
    (20) instr -> . syscall
    (21) instr -> . rType
    (22) instr -> . branch
    (65) breakpoint -> . BREAK NUMBER
    (66) breakpoint -> . BREAK
    (64) nop -> . NOP
    (55) move -> . MOVE REG
    (23) iType -> . LOADS_R REG LABEL
    (24) iType -> . PS_LOADS_A REG LABEL
    (25) iType -> . PS_LOADS_I REG CHAR
    (26) iType -> . PS_LOADS_I REG NUMBER
    (27) iType -> . PS_I_TYPE REG REG CHAR
    (28) iType -> . PS_I_TYPE REG REG NUMBER
    (29) iType -> . MOVE_COND_F F_REG F_REG NUMBER
    (30) iType -> . MOVE_COND_F F_REG F_REG
    (31) iType -> . MOVE_BTWN_F REG F_REG
    (32) iType -> . CONVERT_F F_REG F_REG
    (33) iType -> . COMPARE_F NUMBER COMMA F_REG F_REG
    (34) iType -> . COMPARE_F NUMBER F_REG F_REG
    (35) iType -> . COMPARE_F F_REG F_REG
    (36) iType -> . LOADS_F F_REG LPAREN REG RPAREN
    (37) iType -> . LOADS_F F_REG NUMBER LPAREN REG RPAREN
    (38) iType -> . MOVE_COND REG REG NUMBER
    (39) iType -> . MOVE_COND REG REG
    (40) iType -> . LOADS_R REG LPAREN REG RPAREN
    (41) iType -> . LOADS_R REG NUMBER LPAREN REG RPAREN
    (42) iType -> . LOADS_I REG CHAR
    (43) iType -> . LOADS_I REG NUMBER
    (44) iType -> . I_TYPE REG REG CHAR
    (45) iType -> . I_TYPE REG REG NUMBER
    (53) jType -> . J_TYPE_R REG
    (54) jType -> . J_TYPE LABEL
    (63) syscall -> . SYSCALL
    (46) rType -> . PS_R_TYPE2 REG REG
    (47) rType -> . PS_R_TYPE3 REG REG REG
    (48) rType -> . MOVE_F F_REG F_REG REG
    (49) rType -> . R_TYPE2_F F_REG F_REG
    (50) rType -> . R_TYPE2 REG REG
    (51) rType -> . R_TYPE3_F F_REG F_REG F_REG
    (52) rType -> . R_TYPE3 REG REG REG
    (56) branch -> . PS_ZERO_BRANCH REG LABEL
    (57) branch -> . PS_BRANCH REG REG LABEL
    (58) branch -> . BRANCH_F NUMBER COMMA LABEL
    (59) branch -> . BRANCH_F NUMBER LABEL
    (60) branch -> . BRANCH_F LABEL
    (61) branch -> . ZERO_BRANCH REG LABEL
    (62) branch -> . BRANCH REG REG LABEL
    TEXT            reduce using rule 12 (instrs -> instr filetag .)
    DATA            reduce using rule 12 (instrs -> instr filetag .)
    $end            reduce using rule 12 (instrs -> instr filetag .)
    LABEL           shift and go to state 15
    BREAK           shift and go to state 24
    NOP             shift and go to state 25
    MOVE            shift and go to state 26
    LOADS_R         shift and go to state 27
    PS_LOADS_A      shift and go to state 28
    PS_LOADS_I      shift and go to state 29
    PS_I_TYPE       shift and go to state 30
    MOVE_COND_F     shift and go to state 31
    MOVE_BTWN_F     shift and go to state 32
    CONVERT_F       shift and go to state 33
    COMPARE_F       shift and go to state 34
    LOADS_F         shift and go to state 35
    MOVE_COND       shift and go to state 36
    LOADS_I         shift and go to state 37
    I_TYPE          shift and go to state 38
    J_TYPE_R        shift and go to state 39
    J_TYPE          shift and go to state 40
    SYSCALL         shift and go to state 41
    PS_R_TYPE2      shift and go to state 42
    PS_R_TYPE3      shift and go to state 43
    MOVE_F          shift and go to state 44
    R_TYPE2_F       shift and go to state 45
    R_TYPE2         shift and go to state 46
    R_TYPE3_F       shift and go to state 47
    R_TYPE3         shift and go to state 48
    PS_ZERO_BRANCH  shift and go to state 49
    PS_BRANCH       shift and go to state 50
    BRANCH_F        shift and go to state 51
    ZERO_BRANCH     shift and go to state 52
    BRANCH          shift and go to state 53

    instr                          shift and go to state 14
    instrs                         shift and go to state 124
    label                          shift and go to state 13
    breakpoint                     shift and go to state 16
    nop                            shift and go to state 17
    move                           shift and go to state 18
    iType                          shift and go to state 19
    jType                          shift and go to state 20
    syscall                        shift and go to state 21
    rType                          shift and go to state 22
    branch                         shift and go to state 23

state 70

    (9) label -> LABEL COLON .
    BREAK           reduce using rule 9 (label -> LABEL COLON .)
    NOP             reduce using rule 9 (label -> LABEL COLON .)
    LABEL           reduce using rule 9 (label -> LABEL COLON .)
    MOVE            reduce using rule 9 (label -> LABEL COLON .)
    LOADS_R         reduce using rule 9 (label -> LABEL COLON .)
    PS_LOADS_A      reduce using rule 9 (label -> LABEL COLON .)
    PS_LOADS_I      reduce using rule 9 (label -> LABEL COLON .)
    PS_I_TYPE       reduce using rule 9 (label -> LABEL COLON .)
    MOVE_COND_F     reduce using rule 9 (label -> LABEL COLON .)
    MOVE_BTWN_F     reduce using rule 9 (label -> LABEL COLON .)
    CONVERT_F       reduce using rule 9 (label -> LABEL COLON .)
    COMPARE_F       reduce using rule 9 (label -> LABEL COLON .)
    LOADS_F         reduce using rule 9 (label -> LABEL COLON .)
    MOVE_COND       reduce using rule 9 (label -> LABEL COLON .)
    LOADS_I         reduce using rule 9 (label -> LABEL COLON .)
    I_TYPE          reduce using rule 9 (label -> LABEL COLON .)
    J_TYPE_R        reduce using rule 9 (label -> LABEL COLON .)
    J_TYPE          reduce using rule 9 (label -> LABEL COLON .)
    SYSCALL         reduce using rule 9 (label -> LABEL COLON .)
    PS_R_TYPE2      reduce using rule 9 (label -> LABEL COLON .)
    PS_R_TYPE3      reduce using rule 9 (label -> LABEL COLON .)
    MOVE_F          reduce using rule 9 (label -> LABEL COLON .)
    R_TYPE2_F       reduce using rule 9 (label -> LABEL COLON .)
    R_TYPE2         reduce using rule 9 (label -> LABEL COLON .)
    R_TYPE3_F       reduce using rule 9 (label -> LABEL COLON .)
    R_TYPE3         reduce using rule 9 (label -> LABEL COLON .)
    PS_ZERO_BRANCH  reduce using rule 9 (label -> LABEL COLON .)
    PS_BRANCH       reduce using rule 9 (label -> LABEL COLON .)
    BRANCH_F        reduce using rule 9 (label -> LABEL COLON .)
    ZERO_BRANCH     reduce using rule 9 (label -> LABEL COLON .)
    BRANCH          reduce using rule 9 (label -> LABEL COLON .)
    LINE_MARKER     reduce using rule 9 (label -> LABEL COLON .)
    DOUBLE          reduce using rule 9 (label -> LABEL COLON .)
    FLOAT           reduce using rule 9 (label -> LABEL COLON .)
    HALF            reduce using rule 9 (label -> LABEL COLON .)
    SPACE           reduce using rule 9 (label -> LABEL COLON .)
    ASCII           reduce using rule 9 (label -> LABEL COLON .)
    BYTE            reduce using rule 9 (label -> LABEL COLON .)
    WORD            reduce using rule 9 (label -> LABEL COLON .)
    ASCIIZ          reduce using rule 9 (label -> LABEL COLON .)


state 71

    (65) breakpoint -> BREAK NUMBER .
    LINE_MARKER     reduce using rule 65 (breakpoint -> BREAK NUMBER .)


state 72

    (55) move -> MOVE REG .
    LINE_MARKER     reduce using rule 55 (move -> MOVE REG .)


state 73

    (23) iType -> LOADS_R REG . LABEL
    (40) iType -> LOADS_R REG . LPAREN REG RPAREN
    (41) iType -> LOADS_R REG . NUMBER LPAREN REG RPAREN
    LABEL           shift and go to state 125
    LPAREN          shift and go to state 126
    NUMBER          shift and go to state 127


state 74

    (24) iType -> PS_LOADS_A REG . LABEL
    LABEL           shift and go to state 128


state 75

    (25) iType -> PS_LOADS_I REG . CHAR
    (26) iType -> PS_LOADS_I REG . NUMBER
    CHAR            shift and go to state 129
    NUMBER          shift and go to state 130


state 76

    (27) iType -> PS_I_TYPE REG . REG CHAR
    (28) iType -> PS_I_TYPE REG . REG NUMBER
    REG             shift and go to state 131


state 77

    (29) iType -> MOVE_COND_F F_REG . F_REG NUMBER
    (30) iType -> MOVE_COND_F F_REG . F_REG
    F_REG           shift and go to state 132


state 78

    (31) iType -> MOVE_BTWN_F REG . F_REG
    F_REG           shift and go to state 133


state 79

    (32) iType -> CONVERT_F F_REG . F_REG
    F_REG           shift and go to state 134


state 80

    (33) iType -> COMPARE_F NUMBER . COMMA F_REG F_REG
    (34) iType -> COMPARE_F NUMBER . F_REG F_REG
    COMMA           shift and go to state 135
    F_REG           shift and go to state 136


state 81

    (35) iType -> COMPARE_F F_REG . F_REG
    F_REG           shift and go to state 137


state 82

    (36) iType -> LOADS_F F_REG . LPAREN REG RPAREN
    (37) iType -> LOADS_F F_REG . NUMBER LPAREN REG RPAREN
    LPAREN          shift and go to state 138
    NUMBER          shift and go to state 139


state 83

    (38) iType -> MOVE_COND REG . REG NUMBER
    (39) iType -> MOVE_COND REG . REG
    REG             shift and go to state 140


state 84

    (42) iType -> LOADS_I REG . CHAR
    (43) iType -> LOADS_I REG . NUMBER
    CHAR            shift and go to state 141
    NUMBER          shift and go to state 142


state 85

    (44) iType -> I_TYPE REG . REG CHAR
    (45) iType -> I_TYPE REG . REG NUMBER
    REG             shift and go to state 143


state 86

    (53) jType -> J_TYPE_R REG .
    LINE_MARKER     reduce using rule 53 (jType -> J_TYPE_R REG .)


state 87

    (54) jType -> J_TYPE LABEL .
    LINE_MARKER     reduce using rule 54 (jType -> J_TYPE LABEL .)


state 88

    (46) rType -> PS_R_TYPE2 REG . REG
    REG             shift and go to state 144


state 89

    (47) rType -> PS_R_TYPE3 REG . REG REG
    REG             shift and go to state 145


state 90

    (48) rType -> MOVE_F F_REG . F_REG REG
    F_REG           shift and go to state 146


state 91

    (49) rType -> R_TYPE2_F F_REG . F_REG
    F_REG           shift and go to state 147


state 92

    (50) rType -> R_TYPE2 REG . REG
    REG             shift and go to state 148


state 93

    (51) rType -> R_TYPE3_F F_REG . F_REG F_REG
    F_REG           shift and go to state 149


state 94

    (52) rType -> R_TYPE3 REG . REG REG
    REG             shift and go to state 150


state 95

    (56) branch -> PS_ZERO_BRANCH REG . LABEL
    LABEL           shift and go to state 151


state 96

    (57) branch -> PS_BRANCH REG . REG LABEL
    REG             shift and go to state 152


state 97

    (58) branch -> BRANCH_F NUMBER . COMMA LABEL
    (59) branch -> BRANCH_F NUMBER . LABEL
    COMMA           shift and go to state 153
    LABEL           shift and go to state 154


state 98

    (60) branch -> BRANCH_F LABEL .
    LINE_MARKER     reduce using rule 60 (branch -> BRANCH_F LABEL .)


state 99

    (61) branch -> ZERO_BRANCH REG . LABEL
    LABEL           shift and go to state 155


state 100

    (62) branch -> BRANCH REG . REG LABEL
    REG             shift and go to state 156


state 101

    (67) declarations -> declaration filetag .
    (68) declarations -> declaration filetag . declarations
    (67) declarations -> . declaration filetag
    (68) declarations -> . declaration filetag declarations
    (69) declaration -> . ALIGN NUMBER
    (70) declaration -> . EQV
    (71) declaration -> . DOUBLE floats
    (72) declaration -> . FLOAT floats
    (73) declaration -> . HALF nums
    (74) declaration -> . SPACE nums
    (75) declaration -> . ASCII STRING
    (76) declaration -> . BYTE chars
    (77) declaration -> . WORD nums
    (78) declaration -> . ASCIIZ STRING
    (79) declaration -> . label DOUBLE floats
    (80) declaration -> . label FLOAT floats
    (81) declaration -> . label HALF nums
    (82) declaration -> . label SPACE nums
    (83) declaration -> . label ASCII STRING
    (84) declaration -> . label BYTE chars
    (85) declaration -> . label WORD nums
    (86) declaration -> . label ASCIIZ STRING
    (9) label -> . LABEL COLON
    TEXT            reduce using rule 67 (declarations -> declaration filetag .)
    DATA            reduce using rule 67 (declarations -> declaration filetag .)
    $end            reduce using rule 67 (declarations -> declaration filetag .)
    ALIGN           shift and go to state 56
    EQV             shift and go to state 57
    DOUBLE          shift and go to state 58
    FLOAT           shift and go to state 59
    HALF            shift and go to state 60
    SPACE           shift and go to state 61
    ASCII           shift and go to state 62
    BYTE            shift and go to state 63
    WORD            shift and go to state 64
    ASCIIZ          shift and go to state 65
    LABEL           shift and go to state 15

    declaration                    shift and go to state 55
    declarations                   shift and go to state 157
    label                          shift and go to state 66

state 102

    (69) declaration -> ALIGN NUMBER .
    LINE_MARKER     reduce using rule 69 (declaration -> ALIGN NUMBER .)


state 103

    (71) declaration -> DOUBLE floats .
    LINE_MARKER     reduce using rule 71 (declaration -> DOUBLE floats .)


state 104

    (90) floats -> FLOAT_LITERAL . floats
    (91) floats -> FLOAT_LITERAL . COMMA floats
    (92) floats -> FLOAT_LITERAL .
    (90) floats -> . FLOAT_LITERAL floats
    (91) floats -> . FLOAT_LITERAL COMMA floats
    (92) floats -> . FLOAT_LITERAL
    COMMA           shift and go to state 159
    LINE_MARKER     reduce using rule 92 (floats -> FLOAT_LITERAL .)
    FLOAT_LITERAL   shift and go to state 104

    floats                         shift and go to state 158

state 105

    (72) declaration -> FLOAT floats .
    LINE_MARKER     reduce using rule 72 (declaration -> FLOAT floats .)


state 106

    (73) declaration -> HALF nums .
    LINE_MARKER     reduce using rule 73 (declaration -> HALF nums .)


state 107

    (87) nums -> NUMBER . nums
    (88) nums -> NUMBER . COMMA nums
    (89) nums -> NUMBER .
    (87) nums -> . NUMBER nums
    (88) nums -> . NUMBER COMMA nums
    (89) nums -> . NUMBER
    COMMA           shift and go to state 161
    LINE_MARKER     reduce using rule 89 (nums -> NUMBER .)
    NUMBER          shift and go to state 107

    nums                           shift and go to state 160

state 108

    (74) declaration -> SPACE nums .
    LINE_MARKER     reduce using rule 74 (declaration -> SPACE nums .)


state 109

    (75) declaration -> ASCII STRING .
    LINE_MARKER     reduce using rule 75 (declaration -> ASCII STRING .)


state 110

    (76) declaration -> BYTE chars .
    LINE_MARKER     reduce using rule 76 (declaration -> BYTE chars .)


state 111

    (93) chars -> NUMBER . chars
    (94) chars -> NUMBER . COMMA chars
    (95) chars -> NUMBER .
    (93) chars -> . NUMBER chars
    (94) chars -> . NUMBER COMMA chars
    (95) chars -> . NUMBER
    (96) chars -> . CHAR chars
    (97) chars -> . CHAR COMMA chars
    (98) chars -> . CHAR
    COMMA           shift and go to state 163
    LINE_MARKER     reduce using rule 95 (chars -> NUMBER .)
    NUMBER          shift and go to state 111
    CHAR            shift and go to state 112

    chars                          shift and go to state 162

state 112

    (96) chars -> CHAR . chars
    (97) chars -> CHAR . COMMA chars
    (98) chars -> CHAR .
    (93) chars -> . NUMBER chars
    (94) chars -> . NUMBER COMMA chars
    (95) chars -> . NUMBER
    (96) chars -> . CHAR chars
    (97) chars -> . CHAR COMMA chars
    (98) chars -> . CHAR
    COMMA           shift and go to state 165
    LINE_MARKER     reduce using rule 98 (chars -> CHAR .)
    NUMBER          shift and go to state 111
    CHAR            shift and go to state 112

    chars                          shift and go to state 164

state 113

    (77) declaration -> WORD nums .
    LINE_MARKER     reduce using rule 77 (declaration -> WORD nums .)


state 114

    (78) declaration -> ASCIIZ STRING .
    LINE_MARKER     reduce using rule 78 (declaration -> ASCIIZ STRING .)


state 115

    (79) declaration -> label DOUBLE . floats
    (90) floats -> . FLOAT_LITERAL floats
    (91) floats -> . FLOAT_LITERAL COMMA floats
    (92) floats -> . FLOAT_LITERAL
    FLOAT_LITERAL   shift and go to state 104

    floats                         shift and go to state 166

state 116

    (80) declaration -> label FLOAT . floats
    (90) floats -> . FLOAT_LITERAL floats
    (91) floats -> . FLOAT_LITERAL COMMA floats
    (92) floats -> . FLOAT_LITERAL
    FLOAT_LITERAL   shift and go to state 104

    floats                         shift and go to state 167

state 117

    (81) declaration -> label HALF . nums
    (87) nums -> . NUMBER nums
    (88) nums -> . NUMBER COMMA nums
    (89) nums -> . NUMBER
    NUMBER          shift and go to state 107

    nums                           shift and go to state 168

state 118

    (82) declaration -> label SPACE . nums
    (87) nums -> . NUMBER nums
    (88) nums -> . NUMBER COMMA nums
    (89) nums -> . NUMBER
    NUMBER          shift and go to state 107

    nums                           shift and go to state 169

state 119

    (83) declaration -> label ASCII . STRING
    STRING          shift and go to state 170


state 120

    (84) declaration -> label BYTE . chars
    (93) chars -> . NUMBER chars
    (94) chars -> . NUMBER COMMA chars
    (95) chars -> . NUMBER
    (96) chars -> . CHAR chars
    (97) chars -> . CHAR COMMA chars
    (98) chars -> . CHAR
    NUMBER          shift and go to state 111
    CHAR            shift and go to state 112

    chars                          shift and go to state 171

state 121

    (85) declaration -> label WORD . nums
    (87) nums -> . NUMBER nums
    (88) nums -> . NUMBER COMMA nums
    (89) nums -> . NUMBER
    NUMBER          shift and go to state 107

    nums                           shift and go to state 172

state 122

    (86) declaration -> label ASCIIZ . STRING
    STRING          shift and go to state 173


state 123

    (10) instrs -> label instr filetag . instrs
    (11) instrs -> label instr filetag .
    (10) instrs -> . label instr filetag instrs
    (11) instrs -> . label instr filetag
    (12) instrs -> . instr filetag
    (13) instrs -> . instr filetag instrs
    (9) label -> . LABEL COLON
    (14) instr -> . breakpoint
    (15) instr -> . nop
    (16) instr -> . label
    (17) instr -> . move
    (18) instr -> . iType
    (19) instr -> . jType
    (20) instr -> . syscall
    (21) instr -> . rType
    (22) instr -> . branch
    (65) breakpoint -> . BREAK NUMBER
    (66) breakpoint -> . BREAK
    (64) nop -> . NOP
    (55) move -> . MOVE REG
    (23) iType -> . LOADS_R REG LABEL
    (24) iType -> . PS_LOADS_A REG LABEL
    (25) iType -> . PS_LOADS_I REG CHAR
    (26) iType -> . PS_LOADS_I REG NUMBER
    (27) iType -> . PS_I_TYPE REG REG CHAR
    (28) iType -> . PS_I_TYPE REG REG NUMBER
    (29) iType -> . MOVE_COND_F F_REG F_REG NUMBER
    (30) iType -> . MOVE_COND_F F_REG F_REG
    (31) iType -> . MOVE_BTWN_F REG F_REG
    (32) iType -> . CONVERT_F F_REG F_REG
    (33) iType -> . COMPARE_F NUMBER COMMA F_REG F_REG
    (34) iType -> . COMPARE_F NUMBER F_REG F_REG
    (35) iType -> . COMPARE_F F_REG F_REG
    (36) iType -> . LOADS_F F_REG LPAREN REG RPAREN
    (37) iType -> . LOADS_F F_REG NUMBER LPAREN REG RPAREN
    (38) iType -> . MOVE_COND REG REG NUMBER
    (39) iType -> . MOVE_COND REG REG
    (40) iType -> . LOADS_R REG LPAREN REG RPAREN
    (41) iType -> . LOADS_R REG NUMBER LPAREN REG RPAREN
    (42) iType -> . LOADS_I REG CHAR
    (43) iType -> . LOADS_I REG NUMBER
    (44) iType -> . I_TYPE REG REG CHAR
    (45) iType -> . I_TYPE REG REG NUMBER
    (53) jType -> . J_TYPE_R REG
    (54) jType -> . J_TYPE LABEL
    (63) syscall -> . SYSCALL
    (46) rType -> . PS_R_TYPE2 REG REG
    (47) rType -> . PS_R_TYPE3 REG REG REG
    (48) rType -> . MOVE_F F_REG F_REG REG
    (49) rType -> . R_TYPE2_F F_REG F_REG
    (50) rType -> . R_TYPE2 REG REG
    (51) rType -> . R_TYPE3_F F_REG F_REG F_REG
    (52) rType -> . R_TYPE3 REG REG REG
    (56) branch -> . PS_ZERO_BRANCH REG LABEL
    (57) branch -> . PS_BRANCH REG REG LABEL
    (58) branch -> . BRANCH_F NUMBER COMMA LABEL
    (59) branch -> . BRANCH_F NUMBER LABEL
    (60) branch -> . BRANCH_F LABEL
    (61) branch -> . ZERO_BRANCH REG LABEL
    (62) branch -> . BRANCH REG REG LABEL
    TEXT            reduce using rule 11 (instrs -> label instr filetag .)
    DATA            reduce using rule 11 (instrs -> label instr filetag .)
    $end            reduce using rule 11 (instrs -> label instr filetag .)
    LABEL           shift and go to state 15
    BREAK           shift and go to state 24
    NOP             shift and go to state 25
    MOVE            shift and go to state 26
    LOADS_R         shift and go to state 27
    PS_LOADS_A      shift and go to state 28
    PS_LOADS_I      shift and go to state 29
    PS_I_TYPE       shift and go to state 30
    MOVE_COND_F     shift and go to state 31
    MOVE_BTWN_F     shift and go to state 32
    CONVERT_F       shift and go to state 33
    COMPARE_F       shift and go to state 34
    LOADS_F         shift and go to state 35
    MOVE_COND       shift and go to state 36
    LOADS_I         shift and go to state 37
    I_TYPE          shift and go to state 38
    J_TYPE_R        shift and go to state 39
    J_TYPE          shift and go to state 40
    SYSCALL         shift and go to state 41
    PS_R_TYPE2      shift and go to state 42
    PS_R_TYPE3      shift and go to state 43
    MOVE_F          shift and go to state 44
    R_TYPE2_F       shift and go to state 45
    R_TYPE2         shift and go to state 46
    R_TYPE3_F       shift and go to state 47
    R_TYPE3         shift and go to state 48
    PS_ZERO_BRANCH  shift and go to state 49
    PS_BRANCH       shift and go to state 50
    BRANCH_F        shift and go to state 51
    ZERO_BRANCH     shift and go to state 52
    BRANCH          shift and go to state 53

    label                          shift and go to state 13
    instr                          shift and go to state 14
    instrs                         shift and go to state 174
    breakpoint                     shift and go to state 16
    nop                            shift and go to state 17
    move                           shift and go to state 18
    iType                          shift and go to state 19
    jType                          shift and go to state 20
    syscall                        shift and go to state 21
    rType                          shift and go to state 22
    branch                         shift and go to state 23

state 124

    (13) instrs -> instr filetag instrs .
    TEXT            reduce using rule 13 (instrs -> instr filetag instrs .)
    DATA            reduce using rule 13 (instrs -> instr filetag instrs .)
    $end            reduce using rule 13 (instrs -> instr filetag instrs .)


state 125

    (23) iType -> LOADS_R REG LABEL .
    LINE_MARKER     reduce using rule 23 (iType -> LOADS_R REG LABEL .)


state 126

    (40) iType -> LOADS_R REG LPAREN . REG RPAREN
    REG             shift and go to state 175


state 127

    (41) iType -> LOADS_R REG NUMBER . LPAREN REG RPAREN
    LPAREN          shift and go to state 176


state 128

    (24) iType -> PS_LOADS_A REG LABEL .
    LINE_MARKER     reduce using rule 24 (iType -> PS_LOADS_A REG LABEL .)


state 129

    (25) iType -> PS_LOADS_I REG CHAR .
    LINE_MARKER     reduce using rule 25 (iType -> PS_LOADS_I REG CHAR .)


state 130

    (26) iType -> PS_LOADS_I REG NUMBER .
    LINE_MARKER     reduce using rule 26 (iType -> PS_LOADS_I REG NUMBER .)


state 131

    (27) iType -> PS_I_TYPE REG REG . CHAR
    (28) iType -> PS_I_TYPE REG REG . NUMBER
    CHAR            shift and go to state 177
    NUMBER          shift and go to state 178


state 132

    (29) iType -> MOVE_COND_F F_REG F_REG . NUMBER
    (30) iType -> MOVE_COND_F F_REG F_REG .
    NUMBER          shift and go to state 179
    LINE_MARKER     reduce using rule 30 (iType -> MOVE_COND_F F_REG F_REG .)


state 133

    (31) iType -> MOVE_BTWN_F REG F_REG .
    LINE_MARKER     reduce using rule 31 (iType -> MOVE_BTWN_F REG F_REG .)


state 134

    (32) iType -> CONVERT_F F_REG F_REG .
    LINE_MARKER     reduce using rule 32 (iType -> CONVERT_F F_REG F_REG .)


state 135

    (33) iType -> COMPARE_F NUMBER COMMA . F_REG F_REG
    F_REG           shift and go to state 180


state 136

    (34) iType -> COMPARE_F NUMBER F_REG . F_REG
    F_REG           shift and go to state 181


state 137

    (35) iType -> COMPARE_F F_REG F_REG .
    LINE_MARKER     reduce using rule 35 (iType -> COMPARE_F F_REG F_REG .)


state 138

    (36) iType -> LOADS_F F_REG LPAREN . REG RPAREN
    REG             shift and go to state 182


state 139

    (37) iType -> LOADS_F F_REG NUMBER . LPAREN REG RPAREN
    LPAREN          shift and go to state 183


state 140

    (38) iType -> MOVE_COND REG REG . NUMBER
    (39) iType -> MOVE_COND REG REG .
    NUMBER          shift and go to state 184
    LINE_MARKER     reduce using rule 39 (iType -> MOVE_COND REG REG .)


state 141

    (42) iType -> LOADS_I REG CHAR .
    LINE_MARKER     reduce using rule 42 (iType -> LOADS_I REG CHAR .)


state 142

    (43) iType -> LOADS_I REG NUMBER .
    LINE_MARKER     reduce using rule 43 (iType -> LOADS_I REG NUMBER .)


state 143

    (44) iType -> I_TYPE REG REG . CHAR
    (45) iType -> I_TYPE REG REG . NUMBER
    CHAR            shift and go to state 185
    NUMBER          shift and go to state 186


state 144

    (46) rType -> PS_R_TYPE2 REG REG .
    LINE_MARKER     reduce using rule 46 (rType -> PS_R_TYPE2 REG REG .)


state 145

    (47) rType -> PS_R_TYPE3 REG REG . REG
    REG             shift and go to state 187


state 146

    (48) rType -> MOVE_F F_REG F_REG . REG
    REG             shift and go to state 188


state 147

    (49) rType -> R_TYPE2_F F_REG F_REG .
    LINE_MARKER     reduce using rule 49 (rType -> R_TYPE2_F F_REG F_REG .)


state 148

    (50) rType -> R_TYPE2 REG REG .
    LINE_MARKER     reduce using rule 50 (rType -> R_TYPE2 REG REG .)


state 149

    (51) rType -> R_TYPE3_F F_REG F_REG . F_REG
    F_REG           shift and go to state 189


state 150

    (52) rType -> R_TYPE3 REG REG . REG
    REG             shift and go to state 190


state 151

    (56) branch -> PS_ZERO_BRANCH REG LABEL .
    LINE_MARKER     reduce using rule 56 (branch -> PS_ZERO_BRANCH REG LABEL .)


state 152

    (57) branch -> PS_BRANCH REG REG . LABEL
    LABEL           shift and go to state 191


state 153

    (58) branch -> BRANCH_F NUMBER COMMA . LABEL
    LABEL           shift and go to state 192


state 154

    (59) branch -> BRANCH_F NUMBER LABEL .
    LINE_MARKER     reduce using rule 59 (branch -> BRANCH_F NUMBER LABEL .)


state 155

    (61) branch -> ZERO_BRANCH REG LABEL .
    LINE_MARKER     reduce using rule 61 (branch -> ZERO_BRANCH REG LABEL .)


state 156

    (62) branch -> BRANCH REG REG . LABEL
    LABEL           shift and go to state 193


state 157

    (68) declarations -> declaration filetag declarations .
    TEXT            reduce using rule 68 (declarations -> declaration filetag declarations .)
    DATA            reduce using rule 68 (declarations -> declaration filetag declarations .)
    $end            reduce using rule 68 (declarations -> declaration filetag declarations .)


state 158

    (90) floats -> FLOAT_LITERAL floats .
    LINE_MARKER     reduce using rule 90 (floats -> FLOAT_LITERAL floats .)


state 159

    (91) floats -> FLOAT_LITERAL COMMA . floats
    (90) floats -> . FLOAT_LITERAL floats
    (91) floats -> . FLOAT_LITERAL COMMA floats
    (92) floats -> . FLOAT_LITERAL
    FLOAT_LITERAL   shift and go to state 104

    floats                         shift and go to state 194

state 160

    (87) nums -> NUMBER nums .
    LINE_MARKER     reduce using rule 87 (nums -> NUMBER nums .)


state 161

    (88) nums -> NUMBER COMMA . nums
    (87) nums -> . NUMBER nums
    (88) nums -> . NUMBER COMMA nums
    (89) nums -> . NUMBER
    NUMBER          shift and go to state 107

    nums                           shift and go to state 195

state 162

    (93) chars -> NUMBER chars .
    LINE_MARKER     reduce using rule 93 (chars -> NUMBER chars .)


state 163

    (94) chars -> NUMBER COMMA . chars
    (93) chars -> . NUMBER chars
    (94) chars -> . NUMBER COMMA chars
    (95) chars -> . NUMBER
    (96) chars -> . CHAR chars
    (97) chars -> . CHAR COMMA chars
    (98) chars -> . CHAR
    NUMBER          shift and go to state 111
    CHAR            shift and go to state 112

    chars                          shift and go to state 196

state 164

    (96) chars -> CHAR chars .
    LINE_MARKER     reduce using rule 96 (chars -> CHAR chars .)


state 165

    (97) chars -> CHAR COMMA . chars
    (93) chars -> . NUMBER chars
    (94) chars -> . NUMBER COMMA chars
    (95) chars -> . NUMBER
    (96) chars -> . CHAR chars
    (97) chars -> . CHAR COMMA chars
    (98) chars -> . CHAR
    NUMBER          shift and go to state 111
    CHAR            shift and go to state 112

    chars                          shift and go to state 197

state 166

    (79) declaration -> label DOUBLE floats .
    LINE_MARKER     reduce using rule 79 (declaration -> label DOUBLE floats .)


state 167

    (80) declaration -> label FLOAT floats .
    LINE_MARKER     reduce using rule 80 (declaration -> label FLOAT floats .)


state 168

    (81) declaration -> label HALF nums .
    LINE_MARKER     reduce using rule 81 (declaration -> label HALF nums .)


state 169

    (82) declaration -> label SPACE nums .
    LINE_MARKER     reduce using rule 82 (declaration -> label SPACE nums .)


state 170

    (83) declaration -> label ASCII STRING .
    LINE_MARKER     reduce using rule 83 (declaration -> label ASCII STRING .)


state 171

    (84) declaration -> label BYTE chars .
    LINE_MARKER     reduce using rule 84 (declaration -> label BYTE chars .)


state 172

    (85) declaration -> label WORD nums .
    LINE_MARKER     reduce using rule 85 (declaration -> label WORD nums .)


state 173

    (86) declaration -> label ASCIIZ STRING .
    LINE_MARKER     reduce using rule 86 (declaration -> label ASCIIZ STRING .)


state 174

    (10) instrs -> label instr filetag instrs .
    TEXT            reduce using rule 10 (instrs -> label instr filetag instrs .)
    DATA            reduce using rule 10 (instrs -> label instr filetag instrs .)
    $end            reduce using rule 10 (instrs -> label instr filetag instrs .)


state 175

    (40) iType -> LOADS_R REG LPAREN REG . RPAREN
    RPAREN          shift and go to state 198


state 176

    (41) iType -> LOADS_R REG NUMBER LPAREN . REG RPAREN
    REG             shift and go to state 199


state 177

    (27) iType -> PS_I_TYPE REG REG CHAR .
    LINE_MARKER     reduce using rule 27 (iType -> PS_I_TYPE REG REG CHAR .)


state 178

    (28) iType -> PS_I_TYPE REG REG NUMBER .
    LINE_MARKER     reduce using rule 28 (iType -> PS_I_TYPE REG REG NUMBER .)


state 179

    (29) iType -> MOVE_COND_F F_REG F_REG NUMBER .
    LINE_MARKER     reduce using rule 29 (iType -> MOVE_COND_F F_REG F_REG NUMBER .)


state 180

    (33) iType -> COMPARE_F NUMBER COMMA F_REG . F_REG
    F_REG           shift and go to state 200


state 181

    (34) iType -> COMPARE_F NUMBER F_REG F_REG .
    LINE_MARKER     reduce using rule 34 (iType -> COMPARE_F NUMBER F_REG F_REG .)


state 182

    (36) iType -> LOADS_F F_REG LPAREN REG . RPAREN
    RPAREN          shift and go to state 201


state 183

    (37) iType -> LOADS_F F_REG NUMBER LPAREN . REG RPAREN
    REG             shift and go to state 202


state 184

    (38) iType -> MOVE_COND REG REG NUMBER .
    LINE_MARKER     reduce using rule 38 (iType -> MOVE_COND REG REG NUMBER .)


state 185

    (44) iType -> I_TYPE REG REG CHAR .
    LINE_MARKER     reduce using rule 44 (iType -> I_TYPE REG REG CHAR .)


state 186

    (45) iType -> I_TYPE REG REG NUMBER .
    LINE_MARKER     reduce using rule 45 (iType -> I_TYPE REG REG NUMBER .)


state 187

    (47) rType -> PS_R_TYPE3 REG REG REG .
    LINE_MARKER     reduce using rule 47 (rType -> PS_R_TYPE3 REG REG REG .)


state 188

    (48) rType -> MOVE_F F_REG F_REG REG .
    LINE_MARKER     reduce using rule 48 (rType -> MOVE_F F_REG F_REG REG .)


state 189

    (51) rType -> R_TYPE3_F F_REG F_REG F_REG .
    LINE_MARKER     reduce using rule 51 (rType -> R_TYPE3_F F_REG F_REG F_REG .)


state 190

    (52) rType -> R_TYPE3 REG REG REG .
    LINE_MARKER     reduce using rule 52 (rType -> R_TYPE3 REG REG REG .)


state 191

    (57) branch -> PS_BRANCH REG REG LABEL .
    LINE_MARKER     reduce using rule 57 (branch -> PS_BRANCH REG REG LABEL .)


state 192

    (58) branch -> BRANCH_F NUMBER COMMA LABEL .
    LINE_MARKER     reduce using rule 58 (branch -> BRANCH_F NUMBER COMMA LABEL .)


state 193

    (62) branch -> BRANCH REG REG LABEL .
    LINE_MARKER     reduce using rule 62 (branch -> BRANCH REG REG LABEL .)


state 194

    (91) floats -> FLOAT_LITERAL COMMA floats .
    LINE_MARKER     reduce using rule 91 (floats -> FLOAT_LITERAL COMMA floats .)


state 195

    (88) nums -> NUMBER COMMA nums .
    LINE_MARKER     reduce using rule 88 (nums -> NUMBER COMMA nums .)


state 196

    (94) chars -> NUMBER COMMA chars .
    LINE_MARKER     reduce using rule 94 (chars -> NUMBER COMMA chars .)


state 197

    (97) chars -> CHAR COMMA chars .
    LINE_MARKER     reduce using rule 97 (chars -> CHAR COMMA chars .)


state 198

    (40) iType -> LOADS_R REG LPAREN REG RPAREN .
    LINE_MARKER     reduce using rule 40 (iType -> LOADS_R REG LPAREN REG RPAREN .)


state 199

    (41) iType -> LOADS_R REG NUMBER LPAREN REG . RPAREN
    RPAREN          shift and go to state 203


state 200

    (33) iType -> COMPARE_F NUMBER COMMA F_REG F_REG .
    LINE_MARKER     reduce using rule 33 (iType -> COMPARE_F NUMBER COMMA F_REG F_REG .)


state 201

    (36) iType -> LOADS_F F_REG LPAREN REG RPAREN .
    LINE_MARKER     reduce using rule 36 (iType -> LOADS_F F_REG LPAREN REG RPAREN .)


state 202

    (37) iType -> LOADS_F F_REG NUMBER LPAREN REG . RPAREN
    RPAREN          shift and go to state 204


state 203

    (41) iType -> LOADS_R REG NUMBER LPAREN REG RPAREN .
    LINE_MARKER     reduce using rule 41 (iType -> LOADS_R REG NUMBER LPAREN REG RPAREN .)


state 204

    (37) iType -> LOADS_F F_REG NUMBER LPAREN REG RPAREN .
    LINE_MARKER     reduce using rule 37 (iType -> LOADS_F F_REG NUMBER LPAREN REG RPAREN .)
